// rhyhm classes
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @each $prop, $abbrev in (margin: m, padding: p) {
      @each $size, $length in $spacers {
        .rhythm-#{$abbrev}#{$infix}-#{$size} > * {
          #{$prop}: $length;
        }
        .rhythm-#{$abbrev}t#{$infix}-#{$size} > *,
        .rhythm-#{$abbrev}y#{$infix}-#{$size} > * {
          &:not(:first-child) {
            #{$prop}-top: $length;
          }
        }
        .rhythm-#{$abbrev}r#{$infix}-#{$size} > *,
        .rhythm-#{$abbrev}x#{$infix}-#{$size} > * {
          &:not(:last-child) {
            #{$prop}-right: $length;
          }
        }
        .rhythm-#{$abbrev}b#{$infix}-#{$size} > *,
        .rhythm-#{$abbrev}y#{$infix}-#{$size} > * {
          &:not(:last-child) {
            #{$prop}-bottom: $length;
          }
        }
        .rhythm-#{$abbrev}l#{$infix}-#{$size} > *,
        .rhythm-#{$abbrev}x#{$infix}-#{$size} > * {
          :not(:first-child) {
            #{$prop}-left: $length;
          }
        }
      }
    }

    // shift up classes
    @each $size, $length in $spacers {
      .shift-up#{$infix}-#{$size} {
        margin-top: -#{$length};
      }
    }

    // align with container helper classes
    @if $breakpoint != 'xs' {
      .container-margin-left {
        margin-left: calc(
          (100vw - #{map-get($container-max-widths, $breakpoint) - 30px}) / 2
        );
      }
      .container-margin-right {
        margin-right: calc(
          (100vw - #{map-get($container-max-widths, $breakpoint) - 30px}) / 2
        );
      }
    }
  }
}

// vh and vw helpers classes
$i: 5;
@while $i < 100 {
  .vh-#{$i} {
    height: #{$i}vh;
  }
  .vw-#{$i} {
    width: #{$i}vw;
  }
  $i: $i + 5;
}

.flex-lg-1 {
  @include media-breakpoint-up(lg) {
    flex: 1;
  }
}
